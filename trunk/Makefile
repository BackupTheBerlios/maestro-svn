#############################################################################
# Makefile for building: trunk
# Generated by qmake (1.07a) (Qt 3.3.4) on: Sun Jun 19 00:29:45 2005
# Project:  trunk.pro
# Template: app
# Command: $(QMAKE) -o Makefile trunk.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -DQT_NO_DEBUG $(shell sdl-config --cflags) $(shell sdl-config --libs) -lSDL_mixer
CXXFLAGS = -pipe -Wall -W -O2 -DQT_NO_DEBUG
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/qt/3/mkspecs/linux-g++ -I. -I. -I/usr/lib -I/usr/include/SDL -I$(QTDIR)/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib -lqt -lXext -lX11 -lm -lSDL -lSDL_mixer
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = fenetre.h \
		filtre.h \
		lignes.h \
		mat_list.h \
		morpho.h \
		note.h \
		player.h \
		reco.h \
		reconnaissance.h \
		sami.h \
		sami_list.h
SOURCES = fenetre.cpp \
		filtre.cpp \
		lignes.cpp \
		main.cpp \
		mat_list.cpp \
		morpho.cpp \
		player.cpp \
		reco.cpp \
		reconnaissance.cpp \
		sami.cpp \
		sami_list.cpp
OBJECTS = fenetre.o \
		filtre.o \
		lignes.o \
		main.o \
		mat_list.o \
		morpho.o \
		player.o \
		reco.o \
		reconnaissance.o \
		sami.o \
		sami_list.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_fenetre.cpp
OBJMOC = moc_fenetre.o
DIST	   = trunk.pro
QMAKE_TARGET = trunk
DESTDIR  = 
TARGET   = trunk

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: trunk.pro  /usr/qt/3/mkspecs/linux-g++/qmake.conf 
	$(QMAKE) -o Makefile trunk.pro
qmake: 
	@$(QMAKE) -o Makefile trunk.pro

dist: 
	@mkdir -p .tmp/trunk && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/trunk/ && ( cd `dirname .tmp/trunk` && $(TAR) trunk.tar trunk && $(GZIP) trunk.tar ) && $(MOVE) `dirname .tmp/trunk`/trunk.tar.gz . && $(DEL_FILE) -r .tmp/trunk

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

fenetre.o: fenetre.cpp fenetre.h \
		lignes.h \
		filtre.h \
		morpho.h \
		reconnaissance.h \
		mat_list.h \
		player.h \
		note.h \
		sami_list.h

filtre.o: filtre.cpp filtre.h \
		sami_list.h

lignes.o: lignes.cpp lignes.h \
		mat_list.h \
		morpho.h \
		note.h

main.o: main.cpp fenetre.h \
		mat_list.h \
		reconnaissance.h \
		player.h \
		morpho.h \
		note.h

mat_list.o: mat_list.cpp mat_list.h \
		reco.h \
		morpho.h \
		note.h \
		filtre.h \
		lignes.h \
		sami_list.h

morpho.o: morpho.cpp morpho.h \
		note.h

player.o: player.cpp player.h

reco.o: reco.cpp reco.h \
		filtre.h \
		lignes.h \
		mat_list.h \
		morpho.h \
		sami_list.h \
		note.h

reconnaissance.o: reconnaissance.cpp mat_list.h \
		reconnaissance.h \
		morpho.h \
		note.h

sami.o: sami.cpp sami_list.h \
		sami.h \
		morpho.h \
		filtre.h \
		note.h

sami_list.o: sami_list.cpp sami_list.h

moc_fenetre.o: moc_fenetre.cpp  fenetre.h mat_list.h \
		reconnaissance.h \
		player.h \
		morpho.h \
		note.h

moc_fenetre.cpp: $(MOC) fenetre.h
	$(MOC) fenetre.h -o moc_fenetre.cpp

####### Install

install:  

uninstall:  

